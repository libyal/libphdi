version: ~> 1.0
language: c
os: linux
dist: bionic
env:
  global:
   # Encrypted COVERITY_SCAN_TOKEN
   - secure: "e1ljg07ncCLmNm8uQqnS3mo4ce+fUFEM8A+dgrGU3D1KaVZaYCfxHUHYD+phjRnw4URbbfVS/D4etgnDa17ed0Hkdm4mFBEW/VL73BdF7ufI0pHrG/hEvSr7ugxhDETqcftpNarLuYE+TuntPZilfQ7E1kckSgLXXFEOH7qPVIarEARhaUEIryQXnxMTFZbZ/dWG+mIL4OYy6+j9fDxavFzn3UF+FrEGpDaJ4GtCVBmMomhkdreDSp/2EsjmQeifMKeO1/v2nRgdRERKc1ir62mUB48YjWt0xCQTyhKI5vLZGaSsE8mCRVagvYWjelcrHvAiE+UXVm2EPEQJf6+BEJbnL4dUwERg+WQgGPJ/H4lwi9eDE8nXsbGGpn2hRpElHbueu2UhbyQ/uW2iTqy+BRr2/r5ZaMlyRLABEFw8DitGbeaQV5Qul1Fh4lpZsQkr+JfQMTJzkP4EcmMIIH6GCRrSkAs0XV0KTcA+kSqRIHufgoZf8CVThKIQbWvKFrs0ChU/qwcsUxX1dsPTY/8AhBdNIQ69YId/PLcVvO2HRtfM9C1YZ5/nxJFnLr0dPHlJL5AwOP8f/UykuafjvD+0KCVKFNOoYXNfSdfFYnD38rM72RJt1Knw/fycwU0JR91rPg4FlcNuEtidRQcs5QbLvs3/6iufGop9R6b6H12u05s="
jobs:
  include:
  - name: "Coverity"
    env:
    - CONFIGURE_OPTIONS=""
    - TARGET="coverity"
    compiler: clang
    group: edge
    addons:
      coverity_scan:
        project:
          name: "libyal/libphdi"
          description: "Build submitted via Travis CI"
        notification_email: joachim.metz@gmail.com
        build_command_prepend: "./synclibs.sh && ./autogen.sh && ./configure"
        build_command: "make -j4"
        branch_pattern: master
  - name: "Linux with clang"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-clang"
    compiler: clang
    group: edge
  - name: "Linux with gcc"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc"
    compiler: gcc
    group: edge
  - name: "Linux with gcc on s390x (Docker)"
    env:
    - DOCKERHUB_REPO="s390x/ubuntu"
    - DOCKERHUB_TAG="bionic"
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="docker"
    compiler: gcc
    group: edge
    services:
    - docker
  - name: "Linux with gcc and wide character type (wchar_t) support"
    env:
    - CONFIGURE_OPTIONS="--enable-wide-character-type"
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-wide-character-type"
    compiler: gcc
    group: edge
  - name: "Linux with gcc without optimization"
    env:
    - CONFIGURE_OPTIONS="--enable-shared=no --enable-wide-character-type"
    - CFLAGS="--coverage -O0"
    - CPPFLAGS="-DOPTIMIZATION_DISABLED"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-no-optimization"
    compiler: gcc
    group: edge
  - name: "Linux with gcc and Python module"
    env:
    - CONFIGURE_OPTIONS="--enable-python"
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-python"
    compiler: gcc
    group: edge
  - name: "Linux with gcc and Python 2 module"
    env:
    - CONFIGURE_OPTIONS="--enable-python2"
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - PYTHON_VERSION=2
    - TARGET="linux-gcc-python2"
    compiler: gcc
    group: edge
  - name: "Linux with gcc and Python 3 module"
    env:
    - CONFIGURE_OPTIONS="--enable-python3"
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - PYTHON_VERSION=3
    - TARGET="linux-gcc-python3"
    compiler: gcc
    group: edge
  - name: "Linux with gcc and Python 2 module (setup.py)"
    env:
    - TARGET="linux-gcc-python-setup-py"
    compiler: gcc
    group: edge
    python: 2.7
  - name: "Linux with gcc and Python 3 module (setup.py)"
    env:
    - TARGET="linux-gcc-python-setup-py"
    compiler: gcc
    group: edge
    python: 3.6
  - name: "Linux with gcc and shared libraries"
    env:
    - CONFIGURE_OPTIONS=""
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-shared"
    compiler: gcc
    group: edge
  - name: "Linux with gcc, shared libraries and wide character type (wchar_t) support"
    env:
    - CONFIGURE_OPTIONS="--enable-wide-character-type"
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-shared-wide-character-type"
    compiler: gcc
    group: edge
  - name: "Linux with gcc and static executables support"
    env:
    - CONFIGURE_OPTIONS="--enable-static-executables=yes --enable-multi-threading-support=no"
    - CFLAGS="--coverage"
    - LDFLAGS="--coverage"
    - TARGET="linux-gcc-static-executables"
    compiler: gcc
    group: edge
  - name: "Mac OS 10.14 with clang"
    env:
    - CONFIGURE_OPTIONS=""
    - TARGET="macos-clang"
    compiler: clang
    os: osx
    osx_image: xcode11
  - name: "Mac OS 10.14 with gcc"
    env:
    - CONFIGURE_OPTIONS=""
    - TARGET="macos-gcc"
    compiler: gcc
    os: osx
    osx_image: xcode11
  - name: "Mac OS 10.14 with gcc and Python module"
    env:
    - CONFIGURE_OPTIONS="--enable-python"
    - TARGET="macos-gcc-python"
    compiler: gcc
    os: osx
    osx_image: xcode11
  - name: "Mac OS 10.14 with gcc and Python 2 module"
    env:
    - CONFIGURE_OPTIONS="--enable-python2"
    - PYTHON_VERSION=2
    - TARGET="macos-gcc-python2"
    compiler: gcc
    os: osx
    osx_image: xcode11
  - name: "Mac OS 10.14 with gcc and Python 2 module (setup.py)"
    env:
    - TARGET="macos-gcc-python-setup-py"
    compiler: gcc
    os: osx
    osx_image: xcode11
  - name: "Mac OS 10.14 with gcc and Python 3.8 module (setup.py)"
    env:
    - TARGET="macos-gcc-python-setup-py38"
    compiler: gcc
    os: osx
    osx_image: xcode11
    language: shell
  - name: "Mac OS 10.14 with gcc and Python module and pkgbuild"
    env:
    - CONFIGURE_OPTIONS="--disable-dependency-tracking --prefix=/usr/local --enable-python --with-pyprefix"
    - TARGET="macos-gcc-pkgbuild"
    compiler: gcc
    os: osx
    osx_image: xcode11
before_install:
- .travis/before_install.sh
install:
- .travis/install.sh
script:
- .travis/script.sh
after_success:
- if test ${TARGET} = "linux-gcc-no-optimization"; then
    for DIRECTORY in `find . -maxdepth 1 -type d`; do (cd ${DIRECTORY} && find . -maxdepth 1 -name \*.gcno -type f -exec gcov -pb {} \;) done;
    curl -o codecov.sh -s https://codecov.io/bash && /bin/bash ./codecov.sh -n ${TARGET} -X gcov;
  fi
- if test ${TARGET} = "macos-gcc-python-setup-py38" && test -n "${TRAVIS_TAG}"; then
    python3 -m twine upload dist/*.whl --username __token__ --password ${PYPI_TOKEN} --skip-existing;
  fi
